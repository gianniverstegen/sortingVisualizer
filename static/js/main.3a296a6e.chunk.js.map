{"version":3,"sources":["components/NavigationBar.js","components/SortingVisualizer.js","sortingAlgorithms/quickSort.js","sortingAlgorithms/bubbleSort.js","sortingAlgorithms/shellSort.js","sortingAlgorithms/heapSort.js","sortingAlgorithms/selectionSort.js","sortingAlgorithms/insertionSort.js","testArray.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","createRandomArray","sortArray","sortingAlgorithmHandler","sortingAlgorithm","id","className","onClick","SortingVisualizer","arrayToSort","map","element","IDX","style","height","marginTop","allArrays","sortSubArray","leftIDX","rightIDX","swaps","Math","abs","savedLeftIDX","savedRightIDX","arrayToTreat","length","slice","pivot","arrayWithoutSubArray","i","getArrayWithoutSubArray","lesserArray","greaterArray","push","arrayWithSortedSubArray","futureNewArray","sortedSubArray","joinArrays","concat","quickSort","array","console","log","bubbleSort","j","temp","shellSort","gap","floor","heapify","heap","max","index","leftChild","rightChild","swap","firstItemIndex","lastItemIndex","heapSort","buildMaxHeap","lastElement","selectionSort","min","tmp","insertionSort","arrayLength","current","testArray","App","useState","setArrayToSort","setSortingAlgorithm","quickAnTime","animateInPlace","anTime","unsortedArray","setTimeout","helperOldPlace","helperNewPlace","newPlaceHTML","document","getElementById","oldPlaceHTML","animateShell","randomArray","randomNumber","random","result","pivotIDX","animateQuick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3a296a6e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst NavigationBar = ({\n  createRandomArray,\n  sortArray,\n  sortingAlgorithmHandler,\n  sortingAlgorithm,\n}) => {\n  return (\n    <div id=\"navigationBar\">\n      <div id=\"header-selector\">\n        {sortingAlgorithm}\n        <div className=\"header-dropdown\">\n          <div>\n            <div onClick={() => sortingAlgorithmHandler(\"HEAP SORT\")}>\n              Heap Sort\n            </div>\n            <div onClick={() => sortingAlgorithmHandler(\"SHELL SORT\")}>\n              Shell Sort\n            </div>\n            <div onClick={() => sortingAlgorithmHandler(\"QUICK SORT\")}>\n              Quick Sort\n            </div>\n            <div onClick={() => sortingAlgorithmHandler(\"BUBBLE SORT\")}>\n              Bubble Sort\n            </div>\n            <div onClick={() => sortingAlgorithmHandler(\"SELECTION SORT\")}>\n              Selection Sort\n            </div>\n            <div onClick={() => sortingAlgorithmHandler(\"INSERTION SORT\")}>\n              Insertion Sort\n            </div>\n          </div>\n        </div>\n      </div>\n      <button id=\"randomizeButton\" onClick={createRandomArray}>\n        CREATE AN ARRAY\n      </button>\n      <button id=\"sortButton\" onClick={sortArray}>\n        SORT\n      </button>\n    </div>\n  );\n};\n\nexport default NavigationBar;\n","import React from \"react\";\n\nconst SortingVisualizer = ({ arrayToSort }) => {\n  return (\n    <div id=\"sortingVisualizer\">\n      <div id=\"graphArea\">\n        <div id=\"elementHolder\">\n          {arrayToSort.map((element, IDX) => {\n            return (\n              <div\n                className=\"arrayElement\"\n                key={IDX}\n                id={IDX}\n                style={{\n                  height: `${element}px`,\n                  marginTop: `${477 - element}px`,\n                }}\n              >\n                {/* {element} */}\n              </div>\n            );\n          })}\n        </div>\n        <div id=\"graphBar\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default SortingVisualizer;\n","let allArrays = [];\n\nfunction quickSort(array, leftIDX, rightIDX) {\n  let swaps = [];\n  // make an array of all arrays to animate\n  allArrays = [];\n  // push the unsorted array\n  allArrays.push([array.slice(), 0, 0, array.length - 1]);\n  sortSubArray(leftIDX, rightIDX, swaps);\n  console.log(swaps);\n  return [allArrays, swaps];\n}\n\nfunction sortSubArray(leftIDX, rightIDX, swaps) {\n  // if the length of the subarray is smaller than two we return\n  if (Math.abs(rightIDX - leftIDX) < 2) {\n    return;\n  }\n\n  // im not sure whether to save the indeces or not\n  // change this\n  let savedLeftIDX = leftIDX;\n  let savedRightIDX = rightIDX;\n\n  // pull the array from the top of the allArray stack to treat\n  let arrayToTreat = allArrays[allArrays.length - 1][0].slice();\n  // assign the 0th element of the subarray as the pivot\n  let pivot = arrayToTreat[leftIDX];\n\n  // change this\n  let arrayWithoutSubArray = getArrayWithoutSubArray(\n    arrayToTreat.slice(),\n    leftIDX,\n    rightIDX\n  );\n\n  let lesserArray = [];\n  let greaterArray = [];\n  // loop over the subarray and assign values smaller than\n  // the pivot to the lesserarray and bigger to the greaterarray\n  for (let i = leftIDX + 1; i < rightIDX; i++) {\n    if (arrayToTreat[i] > pivot) {\n      greaterArray.push(arrayToTreat[i]);\n    } else {\n      lesserArray.push(arrayToTreat[i]);\n    }\n  }\n\n  // also push the pivot to the lesser array, so it is the \"middle\"\n  // element in the list\n  lesserArray.push(pivot);\n\n  // sort the subarray\n  let arrayWithSortedSubArray = joinArrays(\n    arrayWithoutSubArray,\n    lesserArray.concat(greaterArray),\n    leftIDX\n  );\n\n  // push it to the stack\n  allArrays.push([\n    arrayWithSortedSubArray,\n    savedLeftIDX,\n    leftIDX + lesserArray.length - 1,\n    savedRightIDX,\n  ]);\n\n  // go left of the pivot\n  sortSubArray(savedLeftIDX, leftIDX + lesserArray.length - 1, swaps);\n\n  // go right of the pivot\n  sortSubArray(leftIDX + lesserArray.length, savedRightIDX, swaps);\n}\n\nfunction getArrayWithoutSubArray(arrayToSort, leftIDX, rightIDX) {\n  // replace all subarray elements with a zero, as a placholder\n  for (let i = leftIDX; i < rightIDX; i++) {\n    arrayToSort[i] = 0;\n  }\n  return arrayToSort;\n}\n\nfunction joinArrays(futureNewArray, sortedSubArray, leftIDX) {\n  // join the sorted subarray with the complete array\n  for (let i = 0; i < sortedSubArray.length; i++) {\n    futureNewArray[leftIDX + i] = sortedSubArray[i];\n  }\n  return futureNewArray;\n}\n\nexport default quickSort;\n","function bubbleSort(array) {\n  let swaps = [];\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array.length - i - 1; j++) {\n      if (array[j] > array[j + 1]) {\n        var temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n        swaps.push([j, j + 1]);\n      }\n    }\n  }\n\n  return [array, swaps];\n}\n\nexport default bubbleSort;\n","function shellSort(array) {\n  let swaps = [];\n\n  for (\n    let gap = Math.floor(array.length / 2);\n    gap > 0;\n    gap = Math.floor(gap / 2)\n  ) {\n    for (let i = gap; i < array.length; i += 1) {\n      let temp = array[i];\n\n      let j;\n      for (j = i; j >= gap && array[j - gap] > temp; j -= gap) {\n        array[j] = array[j - gap];\n        swaps.push([j, j - gap]);\n      }\n      array[j] = temp;\n    }\n  }\n\n  return [array, swaps];\n}\n\nexport default shellSort;\n","function heapSort(array) {\n  var swaps = [];\n  buildMaxHeap(array, swaps);\n  let lastElement = array.length - 1;\n\n  while (lastElement > 0) {\n    swap(array, 0, lastElement, swaps);\n    heapify(array, 0, lastElement, swaps);\n    lastElement -= 1;\n  }\n\n  return [array, swaps];\n}\n\nfunction buildMaxHeap(array, swaps) {\n  let i = Math.floor(array.length / 2 - 1);\n  while (i >= 0) {\n    heapify(array, i, array.length, swaps);\n    i -= 1;\n  }\n}\n\nfunction heapify(heap, i, max, swaps) {\n  let index;\n  let leftChild;\n  let rightChild;\n\n  while (i < max) {\n    index = i;\n    leftChild = 2 * i + 1;\n    rightChild = leftChild + 1;\n\n    if (leftChild < max && heap[leftChild] > heap[index]) {\n      index = leftChild;\n    }\n\n    if (rightChild < max && heap[rightChild] > heap[index]) {\n      index = rightChild;\n    }\n\n    if (index === i) {\n      return;\n    }\n\n    swap(heap, i, index, swaps);\n\n    i = index;\n  }\n}\n\nfunction swap(array, firstItemIndex, lastItemIndex, swaps) {\n  const temp = array[firstItemIndex];\n  array[firstItemIndex] = array[lastItemIndex];\n  array[lastItemIndex] = temp;\n  swaps.push([firstItemIndex, lastItemIndex]);\n}\n\nexport default heapSort;\n","function selectionSort(array) {\n  let swap = [];\n\n  for (let i = 0; i < array.length; i++) {\n    let min = i;\n    for (let j = i + 1; j < array.length; j++) {\n      if (array[j] < array[min]) {\n        min = j;\n      }\n    }\n    if (min !== i) {\n      let tmp = array[i];\n      array[i] = array[min];\n      array[min] = tmp;\n      swap.push([i, min]);\n    }\n  }\n  return [array, swap];\n}\n\nexport default selectionSort;\n","function insertionSort(array) {\n  let swaps = [];\n  let arrayLength = array.length;\n  for (let i = 1; i < arrayLength; i++) {\n    let current = array[i];\n\n    let j = i - 1;\n    while (j > -1 && current < array[j]) {\n      array[j + 1] = array[j];\n      swaps.push([j + 1, j]);\n      j--;\n    }\n    array[j + 1] = current;\n  }\n  return [array, swaps];\n}\n\nexport default insertionSort;\n","const testArray = [\n  50,\n  150,\n  70,\n  80,\n  180,\n  300,\n  290,\n  40,\n  170,\n  10,\n  310,\n  220,\n  200,\n  250,\n  100,\n  55,\n  100,\n  150,\n  77,\n  300,\n  222,\n  10,\n  50,\n  150,\n];\n\nexport default testArray;\n","import NavigationBar from \"./components/NavigationBar\";\nimport SortingVisualizer from \"./components/SortingVisualizer\";\nimport quickSort from \"./sortingAlgorithms/quickSort\";\nimport bubbleSort from \"./sortingAlgorithms/bubbleSort\";\nimport shellSort from \"./sortingAlgorithms/shellSort\";\nimport heapSort from \"./sortingAlgorithms/heapSort\";\nimport selectionSort from \"./sortingAlgorithms/selectionSort\";\nimport insertionSort from \"./sortingAlgorithms/insertionSort\";\nimport React, { useState } from \"react\";\n\nimport testArray from \"./testArray\";\n\nfunction App() {\n  const [arrayToSort, setArrayToSort] = useState(testArray);\n  const [sortingAlgorithm, setSortingAlgorithm] = useState(\n    \"CHOOSE AN ALGORITHM\"\n  );\n\n  const bubbleAnTime = 3;\n  const shellAnTime = 40;\n  const quickAnTime = 200;\n  const selectionAnTime = 80;\n  const insertionAnTime = 15;\n\n  function sortArray() {\n    if (sortingAlgorithm === \"BUBBLE SORT\") {\n      let result = bubbleSort(arrayToSort.slice());\n      let swaps = result[1];\n      animateInPlace(swaps, bubbleAnTime);\n    } else if (sortingAlgorithm === \"SHELL SORT\") {\n      let result = shellSort(arrayToSort.slice());\n      animateShell(result[1]);\n    } else if (sortingAlgorithm === \"HEAP SORT\") {\n      let result = heapSort(arrayToSort.slice());\n      animateShell(result[1]);\n    } else if (sortingAlgorithm === \"SELECTION SORT\") {\n      let result = selectionSort(arrayToSort.slice());\n      animateInPlace(result[1], selectionAnTime);\n    } else if (sortingAlgorithm === \"INSERTION SORT\") {\n      let result = insertionSort(arrayToSort.slice());\n      animateInPlace(result[1], insertionAnTime);\n    } else if (sortingAlgorithm === \"QUICK SORT\") {\n      let result = quickSort(arrayToSort.slice(), 0, arrayToSort.length);\n      animateQuick(result[0]);\n    }\n  }\n\n  function animateInPlace(swaps, anTime) {\n    let unsortedArray = arrayToSort.slice();\n    for (let i = 0; i <= swaps.length; i++) {\n      if (i === swaps.length) {\n        setTimeout(() => {\n          console.log(\"done\", unsortedArray);\n          setArrayToSort(unsortedArray);\n        }, i * anTime);\n        return;\n      }\n      setTimeout(() => {\n        let helperOldPlace = swaps[i][0];\n        let helperNewPlace = swaps[i][1];\n        // swap values in the array\n        let temp = unsortedArray[helperOldPlace];\n        unsortedArray[helperOldPlace] = unsortedArray[helperNewPlace];\n        unsortedArray[helperNewPlace] = temp;\n\n        // HTML height and classname stuff\n        let newPlaceHTML = document.getElementById(helperNewPlace).style;\n        let oldPlaceHTML = document.getElementById(helperOldPlace).style;\n        newPlaceHTML.height = `${unsortedArray[helperNewPlace]}px`;\n        newPlaceHTML.marginTop = `${477 - unsortedArray[helperNewPlace]}px`;\n        oldPlaceHTML.height = `${unsortedArray[helperOldPlace]}px`;\n        oldPlaceHTML.marginTop = `${477 - unsortedArray[helperOldPlace]}px`;\n        document.getElementById(helperOldPlace).className =\n          \"arrayElement-isSelected\";\n        document.getElementById(helperNewPlace).className =\n          \"arrayElement-isSelected\";\n        setTimeout(() => {\n          document.getElementById(helperOldPlace).className = \"arrayElement\";\n          document.getElementById(helperNewPlace).className = \"arrayElement\";\n        }, anTime);\n      }, i * anTime);\n    }\n  }\n\n  function animateShell(swaps) {\n    let unsortedArray = arrayToSort.slice();\n    for (let i = 0; i <= swaps.length; i++) {\n      // check pathfinding visualizer to see how to set state\n      if (i === swaps.length) {\n        setTimeout(() => {\n          console.log(\"done\", unsortedArray);\n          setArrayToSort(unsortedArray);\n        }, i * shellAnTime);\n        return;\n      }\n      setTimeout(() => {\n        let helperOldPlace = swaps[i][0];\n        let helperNewPlace = swaps[i][1];\n        // swap values in the array\n        let temp = unsortedArray[helperOldPlace];\n        unsortedArray[helperOldPlace] = unsortedArray[helperNewPlace];\n        unsortedArray[helperNewPlace] = temp;\n\n        // HTML height and classname stuff\n        let newPlaceHTML = document.getElementById(helperNewPlace).style;\n        let oldPlaceHTML = document.getElementById(helperOldPlace).style;\n        newPlaceHTML.height = `${unsortedArray[helperNewPlace]}px`;\n        newPlaceHTML.marginTop = `${477 - unsortedArray[helperNewPlace]}px`;\n        oldPlaceHTML.height = `${unsortedArray[helperOldPlace]}px`;\n        oldPlaceHTML.marginTop = `${477 - unsortedArray[helperOldPlace]}px`;\n        document.getElementById(helperOldPlace).className =\n          \"arrayElement-isSelected\";\n        document.getElementById(helperNewPlace).className =\n          \"arrayElement-isSelected\";\n        setTimeout(() => {\n          document.getElementById(helperOldPlace).className = \"arrayElement\";\n          document.getElementById(helperNewPlace).className = \"arrayElement\";\n        }, shellAnTime);\n      }, i * shellAnTime);\n    }\n  }\n\n  function animateQuick(result) {\n    for (let i = 0; i <= result.length; i++) {\n      // check pathfinding visualizer to see how to set state\n      if (i === result.length) {\n        setTimeout(() => {\n          setArrayToSort(result[result.length - 1][0]);\n          console.log(\"hi\", i);\n        }, i * quickAnTime);\n        return;\n      }\n      setTimeout(() => {\n        let leftIDX = result[i][1] - 1;\n        let pivotIDX = result[i][2];\n        let rightIDX = result[i][3] + 1;\n        if (rightIDX >= 105) rightIDX = rightIDX - 2;\n        if (leftIDX === -1) leftIDX++;\n        document.getElementById(leftIDX).className = \"arrayElement-isPointer\";\n        document.getElementById(rightIDX).className = \"arrayElement-isPointer\";\n        document.getElementById(pivotIDX).className = \"arrayElement-isPivot\";\n        setArrayToSort(result[i][0]);\n        setTimeout(() => {\n          document.getElementById(pivotIDX).className = \"arrayElement\";\n          document.getElementById(leftIDX).className = \"arrayElement\";\n          document.getElementById(rightIDX).className = \"arrayElement\";\n        }, Math.floor(quickAnTime * 1.2));\n      }, i * quickAnTime);\n    }\n  }\n\n  function createRandomArray() {\n    let randomArray = [];\n    for (let i = 0; i < 105; i++) {\n      let randomNumber = Math.floor(Math.random() * 450);\n      randomArray.push(randomNumber);\n    }\n    setArrayToSort(randomArray);\n  }\n\n  function sortingAlgorithmHandler(id) {\n    setSortingAlgorithm(id);\n  }\n\n  return (\n    <div className=\"App\">\n      <NavigationBar\n        createRandomArray={createRandomArray}\n        sortArray={sortArray}\n        sortingAlgorithmHandler={sortingAlgorithmHandler}\n        sortingAlgorithm={sortingAlgorithm}\n      />\n      <SortingVisualizer arrayToSort={arrayToSort} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}